---
title: "Grade analysis homework"
format: html
editor: visual
---

```{r}
#| echo: false
#| message: false
here::i_am("Grade analysis.Rproj")
library(here)
library(dplyr)
library(ggplot2)
library(tidyr)
library(vroom)
library(knitr)
library(stringr)
```

# Question 1

## Introduction

```{r}
#| message: false
grades <- vroom(here("grades.csv"))
```

## Example

```{r}
#| echo: false
#| message: false
grades |> summarise(anyNA(Exam))
is.na(c(1, 2, NA, 4, NA))
```

# Question 2

```{r}
#| echo: false
#| message: false
grades %>%
  summarise(
    Minimum = min(Exam, na.rm = TRUE),
    Maximum = max(Exam, na.rm = TRUE),
    Median = median(Exam, na.rm = TRUE),
    Mean = mean(Exam, na.rm = TRUE)
  ) %>%
  kable()
```

# Question 3

```{r}
not_take_exam_count <- grades %>% count(is.na(Exam))
print(not_take_exam_count)

#| echo: false
#| message: false
not_take_exam_count <- grades %>%
  filter(is.na(Exam)) %>%
  nrow()
cat("The number of students who did not take the final exam is", not_take_exam_count)

```

# Question 4

```{r}
#| echo: false
#| message: false
ggplot(grades, aes(x = Exam)) +
  geom_histogram() +
  labs(
    title = "Distribution of Grades at Exam",
    x = "Exam Grades whitout na",
    y = "Frequency")
```

In the second graph we have excluding the na to avoid the error message from ggplot.

```{r}
Exam_without_na <- grades |> filter(!is.na(Exam))

Exam_without_na |> ggplot(aes(x = Exam)) +
  geom_histogram(binwidth = 0.7, fill = "darkblue")
```

# Question 5

```{r}
#| echo: false
#| message: false
students_by_group <- grades %>%
  group_by(Group) %>%
  summarise(Count = n())
kable(students_by_group)
```

We have compute the number of students in each Group and include the results in document as a table.

# Question 6

```{r}
#| echo: false
#| message: false
ggplot(grades, aes(x = Group, fill = Group)) + geom_bar() + 
   theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

# Question 7

## First representation

```{r}
#| echo: false
#| message: false
ggplot(grades, aes(x = Exam, fill = Group)) +
  geom_histogram(bins = 20) +
  geom_rug(alpha = 0.03, linewidth = 1.5) +
  facet_wrap(~Group)
```

This graph enable to show the distribution of grades at Exam conditioned by the group.

## Second representation

```{r}
#| echo: false
#| message: false
ggplot(grades, aes(x = Group, y=Exam, fill = Group)) +
  geom_boxplot() +  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

This graph enable to show the distribution of grades at Exam conditioned by the group, while the first separates the group in each box.

# Question 8

```{r}
missed_exam_counts <- grades %>%
  group_by(Group) %>%
  summarise(missed_exam_counts = sum(is.na(Exam)))

knitr::kable(missed_exam_counts)
```
It shows how many grades it missed in each group.

# Question 9

```{r}
all_Groups <- inner_join(grades, missed_exam_counts, by=join_by("Group"))
```

```{r}
ggplot(all_Groups, aes(x = Group, y = missed_exam_counts)) +
  geom_col() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Here, we have used inner_join to combine data (grades and missed exam counts) to create a single column for each group instead of two. 

# Question 10 

```{r}
grades_long <- grades %>% pivot_longer(
  cols = Exam | starts_with("MCQ_") | starts_with("Online_MCQ_"),
  names_to = "name",
  values_to = "value")
knitr::kable(grades_long)
```

# Question 11 

```{r}
missing_grades_per_student <- grades_long %>%
  group_by(Id) %>%
  summarise(missing_grades_per_student = sum(is.na(value)))
knitr::kable(missing_grades_per_student)
```

# Question 12 

```{r}
ggplot(missing_grades_per_student, aes(x = missing_grades_per_student )) + geom_histogram()
```

```{r}
ggplot(missing_grades_per_student, aes(x = missing_grades_per_student)) +
  geom_density(bins = 30, binwidth = 0.5, fill = "green") +
  labs(
    title = "Distribution of Missing Grades per Student",
    x = "Total Missing Grades",
    y = "Density"
  )
```
# Question 13 

```{r}
exam_new_grades <- grades_long |> filter(str_starts(name, "Exam"))
missed_exam_counts_2 <- exam_new_grades %>% group_by(Group) %>%
  summarise(nber_na_exam2 = sum(is.na(value)))
knitr::kable(missed_exam_counts_2)
```

#Question 14 

```{r}
online_QCM <- grades_long |> filter(str_starts(name, "Online_MCQ_"))
na_online_QCM_per_student <- online_QCM %>%
  group_by(Id) %>%
  summarise(nber_na_online_QCM = sum(is.na(value)))
knitr::kable(na_online_QCM_per_student)
```

# Question 15 

```{r}
grades_with_na_online_QCM <- grades |>
  rowwise() |>
  mutate(na_online_QCM_per_student_2 = sum(is.na(c_across(starts_with("Online_MCQ_")))))
```

It's the same things, we can do both. 

## Geom_histogram 
```{r}
grades_with_na_online_QCM |> ggplot(aes(x = Exam, fill = , color = na_online_QCM_per_student_2)) + geom_histogram(binwidth = 1, fill = "blue", color = "black")
```
## Geom boxplot 

```{r}
ggplot(grades_with_na_online_QCM, aes(x = na_online_QCM_per_student_2, y= Exam, fill = na_online_QCM_per_student_2 )) +
  geom_boxplot(
    title = "Distribution of Exam Grades by Missing Online Test Grades"
  )
```
## Geom density 

```{r}
grades_with_na_online_QCM |> ggplot(aes(x = Exam, group = na_online_QCM_per_student_2, color = na_online_QCM_per_student_2))+ geom_density(bw = "SJ", title = "Distribution of Exam Grades by Missing Online Test Grades")
```
## Geom bar 

```{r}
ggplot(grades_with_na_online_QCM, aes(x = Exam, fill = na_online_QCM_per_student_2, color = na_online_QCM_per_student_2)) + geom_bar(binwidth = 1, fill = "blue", color = "black") 
```
In this approach, we first calculate the number of missing online test grades using the long-format data and then join these results with the original 'grades' data frame before creating the histogram.

Both approaches will allow you to visualize the distribution of Exam grades conditioned by the number of missing online test grades. Choose the one that best fits your data structure and workflow.

## Question 16 

```{r}
grades_with_na_qcm <- grades |>
  rowwise() |>
  mutate(na_qcm_per_student = sum(is.na(c_across(starts_with("MCQ_")))))

grades_with_na_qcm2 <- grades_with_na_qcm |> mutate(Missed = if (na_qcm_per_student == 0) Missed <- FALSE else Missed <- TRUE)

QCM_missed_per_student <- grades_with_na_qcm2 |> select(Id, Missed)

knitr::kable(QCM_missed_per_student)
```

## Question 17 
```{r}
nber_missed_mcq_per_group <- grades_with_na_qcm2 |>
  group_by(Group) |>
  count(Missed)

p_na_mcq_group <- inner_join(nber_missed_mcq_per_group, students_by_group, by = join_by(Group), suffix = c("_missed_mcq", "_students"))

p_na_mcq_group_true <- p_na_mcq_group |> filter(Missed==T)

p_na_mcq_group2 <- p_na_mcq_group_true

p_na_mcq_group3 <- p_na_mcq_group 

knitr::kable(p_na_mcq_group3)
```
## Question 18 

```{r}
average_exam_per_group <- grades |>
  group_by(Group) |>
  summarise(mean_exam = mean(Exam, na.rm=T))

exam_per_group <- grades |>
  group_by(Group) |>
  count(Exam)

exam_per_group_2 <- inner_join(exam_per_group, students_by_group, by = join_by(Group), suffix = c("_exam", "_students"))

mean_exam_per_group <- exam_per_group_2 |> group_by(Group) |> mutate(mean_exam = sum(Exam, na.rm=T)/n_students)

mean_exam_per_group2 <- mean_exam_per_group |> select(Group, mean_exam)
```
```{r}
mean_exam_missed_mcq <- inner_join(average_exam_per_group, p_na_mcq_group3)
```

```{r}
set.seed(30)
mean_exam_missed_mcq |> ggplot(aes(x = P_missed, y = mean_exam, color = mean_exam, size = P_missed)) +
  geom_jitter(alpha = 0.5, width = 0.01, height = 0.01) +
  xlab("percentage of missed MCQ_xx grade per group") +
  ylab("average grade at the Exam per group") +
  scale_size_continuous("average grade at the Exam per group") +
  scale_color_viridis_c("percentage of missed MCQ_xx grade per group")
```


