---
title: "Grade analysis"
author: "Adrien Bouisson"
format: html
editor: visual
---

```{r}
#| echo: false
#| message: false
here::i_am("Grade analysis.Rproj")
library(here)
library(dplyr)
library(ggplot2)
library(tidyr)
library(vroom)
library(knitr)
library(stringr)
```

# Exercice Data analysis

## Question 1

```{r}
#| message: false
grades <- vroom(here("grades.csv"))
```

```{r}
#| echo: false
#| message: false
grades |> summarise(anyNA(Exam))
is.na(c(1, 2, NA, 4, NA))
```

## Question 2

```{r}
#| echo: false
#| message: false
grades %>%
  summarise(
    Minimum = min(Exam, na.rm = TRUE),
    Maximum = max(Exam, na.rm = TRUE),
    Median = median(Exam, na.rm = TRUE),
    Mean = mean(Exam, na.rm = TRUE)
  ) %>%
  kable()
```

## Question 3

```{r}
not_take_exam_count <- grades %>%
  count(is.na(Exam))
print(not_take_exam_count)
```

```{r}
#| echo: false
#| message: false
not_take_exam_count <- grades %>%
  filter(is.na(Exam)) %>%
  nrow()
cat("The number of students who did not take the final exam is", not_take_exam_count)

```

## Question 4

```{r}
#| echo: false
#| message: false
ggplot(grades, aes(x = Exam)) +
  geom_histogram() +
  labs(
    title = "Distribution of Grades at Exam",
    x = "Exam Grades whitout na",
    y = "Frequency")
```

In the second graph we have excluding the na to avoid the error message from ggplot.

```{r}
#| echo: false
#| message: false
grades_whitout_na <- grades%>%
  filter(!is.na(Exam)) %>%
print(grades_whitout_na)

ggplot(grades_whitout_na, aes(x = Exam )) + geom_histogram(binwidth = 0.7, fill = "darkblue") +  labs(
    title = "Distribution of Exam Grades (Excluding NA)",
    x = "Exam Grades",
    y = "Frequency")
```

## Question 5

```{r}
#| echo: false
#| message: false
students_by_group <- grades %>%
  group_by(Group) %>%
  summarise(Count = n())
kable(students_by_group)
```

## Question 6

```{r}
#| echo: false
#| message: false
ggplot(grades, aes(x = Group, fill = Group)) + geom_bar() + 
   theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Question 7

```{r}
#| echo: false
#| message: false
ggplot(grades_whitout_na, aes(x = Group, y = Exam, fill = Group)) +
  geom_boxplot() +
  labs(
    title = "Distribution of Exam Grades by Group",
    x = "Group",
    y = "Exam Grades"
  ) +  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Question 8

```{r}
missed_exam_counts <- grades %>%
  group_by(Group) %>%
  summarise(Count_Missed_Exam = sum(is.na(Exam)))
missed_exam_counts <- table(grades$Group, is.na(grades$Exam))
missed_exam_counts <- as.data.frame(missed_exam_counts)
colnames(missed_exam_counts) <- c("Group", "Count_Missed_Exam")
missed_exam_counts
```

## Question 9

```{r}
library(dplyr)

missed_exam_counts <- grades %>%
  summarise(Group, Count_Missed_Exam = sum(is.na(Exam)))
missed_exam_counts

```

```{r}
library(ggplot2)

ggplot(missed_exam_counts, aes(x = Group, y = Count_Missed_Exam)) +
  geom_col(fill = "blue") +
  labs(
    title = "Number of Students Who Missed the Exam by Group",
    x = "Group",
    y = "Count"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## Question 10

```{r}
new_grades <- grades %>% pivot_longer(
  cols = Exam | starts_with("MCQ_") |
    starts_with("Online_MCQ"), 
  names_to = "name",
  values_to = "value"
)
```

## Question 11

```{r}
missing_grades_per_student <- new_grades %>%
  group_by(Id) %>%
  summarise(missing_grades_per_student = sum(is.na(value)))
missing_grades_per_student
```

## Question 12

```{r}
ggplot(missing_grades_per_student, aes(x= missing_grades_per_student)) + geom_histogram(bins = 30, binwidth = 0.5, fill = "blue")
```

```{r}
ggplot(missing_grades_per_student, aes(x = missing_grades_per_student)) +
  geom_density(bw = "SJ") +
  labs(
    title = "Distribution of Missing Grades per Student",
    x = "Total Missing Grades",
    y = "Density"
  )
```

## Question 13

```{r}
missed_exam_counts_grp <- new_grades %>%
  filter(str_starts(name, "Exam")) %>%
  group_by(Group) %>%
  summarise(missed_exam_counts = sum(is.na(Exam)))
missed_exam_counts_grp
```

## Question 14

```{r}
missing_online_test_grades <- new_grades %>%
  filter(str_starts(name, "Online_MCQ_")) %>%
  group_by(Id) %>%
  summarise(Count_Missed_Online_Test_Grades = sum(is.na(new_grades)))
missing_online_test_grades
```

nombre de fois o√π ils ont pas fait le test en ligne

## Question 15

```{r}
missing_online_test_grades <- new_grades %>%
  filter(str_starts(name, "Online_MCQ_")) %>%
  group_by(Id) %>%
  summarise(Count_Missed_Online_Test_Grades = sum(is.na(Grade)))

grades_with_missing_online <- new_grades%>%
  left_join(missing_online_test_grades, by = "Id")

# Calculate the average exam grade per group conditioned by the number of missing online test grades
exam_vs_missing_online <- grades_with_missing_online %>%
  group_by(Count_Missed_Online_Test_Grades) %>%
  summarise(Average_Exam_Grade = mean(Exam, na.rm = TRUE))

# Create a bar plot to visualize the distribution
ggplot(exam_vs_missing_online, aes(x = factor(Count_Missed_Online_Test_Grades), y = Average_Exam_Grade)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(
    title = "Average Exam Grade Conditioned by Missing Online Test Grades",
    x = "Missing Online Test Grades",
    y = "Average Exam Grade"
  ) +
  scale_x_discrete(labels = seq(0, max(exam_vs_missing_online$Count_Missed_Online_Test_Grades), 1))

```
